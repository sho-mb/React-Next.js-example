// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mangoBargurShop.Data;

#nullable disable

namespace mangoBargurShop.Migrations
{
    [DbContext(typeof(HamburgerContext))]
    [Migration("20231201030927_ModelRevisions")]
    partial class ModelRevisions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HamburgerSauce", b =>
                {
                    b.Property<int>("HamburgersId")
                        .HasColumnType("int");

                    b.Property<int>("SaucesId")
                        .HasColumnType("int");

                    b.HasKey("HamburgersId", "SaucesId");

                    b.HasIndex("SaucesId");

                    b.ToTable("HamburgerSauce");
                });

            modelBuilder.Entity("HamburgerTopping", b =>
                {
                    b.Property<int>("HamburgersId")
                        .HasColumnType("int");

                    b.Property<int>("ToppingsId")
                        .HasColumnType("int");

                    b.HasKey("HamburgersId", "ToppingsId");

                    b.HasIndex("ToppingsId");

                    b.ToTable("HamburgerTopping");
                });

            modelBuilder.Entity("mangoBargurShop.Model.Hamburger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Hamburgers");
                });

            modelBuilder.Entity("mangoBargurShop.Model.Sauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("double");

                    b.Property<bool>("IsSpicy")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("mangoBargurShop.Model.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Toppings");
                });

            modelBuilder.Entity("HamburgerSauce", b =>
                {
                    b.HasOne("mangoBargurShop.Model.Hamburger", null)
                        .WithMany()
                        .HasForeignKey("HamburgersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mangoBargurShop.Model.Sauce", null)
                        .WithMany()
                        .HasForeignKey("SaucesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HamburgerTopping", b =>
                {
                    b.HasOne("mangoBargurShop.Model.Hamburger", null)
                        .WithMany()
                        .HasForeignKey("HamburgersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mangoBargurShop.Model.Topping", null)
                        .WithMany()
                        .HasForeignKey("ToppingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
